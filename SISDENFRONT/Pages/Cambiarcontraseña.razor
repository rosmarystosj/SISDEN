@page "/cambiarcontra"
@layout NavLay
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject LoginModelService LoginModel
@inject RegistroEntidadService RegistroServiceEntidad
@inject RegistroDenuncianteService RegistroService
@inject DenunciasService DenunciasService
@inject AuthService AuthService
@inject NavigationManager NavigationManager


<!DOCTYPE html>
<html lang="en">

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="floating-alert">
        @errorMessage
    </div>
}
<body>
    <div class="loader-wrapper">
        <div class="loader">
            <div class="loader4"></div>
        </div>
    </div>
    <div class="tap-top"><i data-feather="chevrons-up"></i></div>
    <div class="page-wrapper compact-wrapper" id="pageWrapper">
        <div class="page-body-wrapper">
            <div class="page-body">
                <div class="container-fluid">
                    <div class="page-title">
                        <div class="row">
                            <div class="col-6"></div>
                            <div class="col-6">
                                <ol class="breadcrumb">
                                    <li class="breadcrumb-item">
                                        <a href="index.html">
                                            <svg class="stroke-icon">
                                                <use href="../assets/svg/icon-sprite.svg#stroke-home"></use>
                                            </svg>
                                        </a>
                                    </li>
                                    <li class="breadcrumb-item">Tu Cuenta</li>
                                    <li class="breadcrumb-item active">Cambiar Contraseña</li>
                                </ol>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header">
                                    <h4>Cambiar Contraseña</h4>
                                    <p class="f-m-light mt-1">Complete los siguientes campos</p>
                                </div>
                                <div class="card-body">
                                    <div class="row g-3">
                                        <div class="col-12">
                                            <div class="card-wrapper border rounded-3 light-card checkbox-checked">
                                                <form class="row g-3" @onsubmit="HandleSubmit">
                                                    <div class="col-xxl-4 col-sm-6">
                                                        <label class="col-form-label" for="currentPassword">Contraseña Anterior</label>
                                                        <input class="form-control" id="currentPassword" type="password" placeholder="Ingrese la contraseña anterior" @bind="changePasswordRequest.CurrentPassword" required>
                                                    </div>
                                                    <div class="col-xxl-4 col-sm-6">
                                                        <label class="col-form-label" for="newPassword">Nueva Contraseña</label>
                                                        <input class="form-control" id="newPassword" type="password" placeholder="Digite la nueva contraseña" @bind="changePasswordRequest.NewPassword" required>
                                                    </div>
                                                    <div class="col-xxl-4 col-sm-6">
                                                        <label class="col-form-label" for="confirmNewPassword">Confirmar Nueva Contraseña</label>
                                                        <input class="form-control" id="confirmNewPassword" type="password" placeholder="Digite la nueva contraseña otra vez" @bind="changePasswordRequest.ConfirmNewPassword" required>
                                                    </div>
                                                    <div class="col-12">
                                                        <button type="submit" class="btn btn-primary">Cambiar Contraseña</button>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <footer class="footer">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-12 footer-copyright text-center">
                            <p class="mb-0">Copyright 2024 © Riho theme by pixelstrap</p>
                        </div>
                    </div>
                </div>
            </footer>
        </div>
    </div>
</body>
</html>

@code {
    private string errorMessage;
    private string correo;
    private int user;

    private ChangePasswordModel changePasswordRequest = new ChangePasswordModel();

    private async Task HandleSubmit()
    {
        errorMessage = null;

        if (changePasswordRequest.NewPassword != changePasswordRequest.ConfirmNewPassword)
        {
            errorMessage = "La nueva contraseña y la confirmación no coinciden.";
            return;
        }
        if (LoginModel.LoginModel?.UsuRol == 1 && LoginModel.LoginModel?.UsuRol == 2)
        {
            correo = LoginModel.LoginModel.Usuemail;
            user = await AuthService.ObtenerUsuarioIdAsync(correo);

        }
        else if (RegistroService.RegistroModelo?.Usurol == 1)
        {
            correo = RegistroService.RegistroModelo.Usuidentificacion;
            user = await AuthService.ObtenerUsuarioIdAsync(correo);
        }

        else if (RegistroServiceEntidad.EntidadModelo?.Usurol == 2)
        {
            correo = RegistroServiceEntidad.EntidadModelo.Usuemail;
            user = await AuthService.ObtenerUsuarioIdAsync(correo);
        }
        changePasswordRequest.UserId = user;
        try
        {
            var response = await Http.PostAsJsonAsync("/api/cambiarContra", changePasswordRequest);

            if (response.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/index");
            }
            else
            {
                var errorResponse = await response.Content.ReadAsStringAsync();
                errorMessage = $"Error: {errorResponse}";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Ocurrió un error inesperado.";
            Console.WriteLine(ex.Message);
        }
    }
}