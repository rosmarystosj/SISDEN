@page "/login-denunciante"
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@using System.ComponentModel.DataAnnotations
@inject LoginModelService LoginModel
@inject IJSRuntime JSRuntime

<head>
   


</head>
<body>
    <div class="container-fluid p-0">
        <div class="row m-0">
            <div class="col-12 p-0">
                <div class="login-card login-dark">
                    <div>
                            <div><a class="logo"> <img class="img-fluid" src="../assets/images/landing/logo_transparent_background150.png" @onclick="IraHome" /></a></div>


                        <div class="login-main">
                          
                            <EditForm class="theme-form" Model="LoginModel.LoginModel">
                                <DataAnnotationsValidator />
                                <Validaciones TModel="LoginModel" />
                                <h4>Iniciar sesión para ver tus denuncias</h4>
                                <p>Ingrese su cédula y contraseña para iniciar sesión</p>

                                <div class="form-group">
                                    <label class="col-form-label" for="Usuidentificacion">Cédula</label>
                                        <InputText id="Usuidentificacion" class="form-control" type="text" required="" placeholder="000-000000-0" @bind-Value="LoginModel.LoginModel.Usuidentificacion" />
                                        <ValidationMessage For="@(() => LoginModel.LoginModel.Usuidentificacion)" class="validation-message" />
                                </div>
                                <div class="form-group">
                                    <label class="col-form-label" for="Usucontraseña">Contraseña</label>
                                    <div class="form-input position-relative">
                                            <InputText id="Usucontraseña" class="form-control" type="password" name="login[password]" required="" placeholder="*********" @bind-Value="LoginModel.LoginModel.Usucontraseña" />
                                            <ValidationMessage For="@(() => LoginModel.LoginModel.Usucontraseña)" class="validation-message" />
                                        <div class="show-hide"><span class="show"></span></div>
                                    </div>
                                </div>
                                <div class="form-group mb-0">
                                    <div class="checkbox p-0">
                                        <a class="link" href="/olvidarcontra">¿Olvidaste tu contraseña?</a>

                                    </div>
                                    <button class="btn btn-primary btn-block w-100" @onclick="HandleLogin" type="submit">Iniciar sesión</button>
                                </div>
                            </EditForm>
                            <p class="mt-4 mb-0 text-center">¿No tienes una cuenta?<a class="ms-2" href="sign-up.html">Crear cuenta</a></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger">@errorMessage</div>
    }



</body>


@code {



    private string errorMessage; 
    
    private async Task IraHome()
    {
        NavigationManager.NavigateTo("/");
    } 

    private async Task HandleLogin()
    {
        try
        {
            errorMessage = null;   
            var result = await AuthService.LoginDenunciante(LoginModel.LoginModel);
            LoginModel.LoginModel.UsuRol = 1;
        }
    catch (ApplicationException ex)
    {
        errorMessage = ex.Message;
    }
    catch (Exception ex)
    {
        errorMessage = "An unexpected error occurred.";
        Console.WriteLine(ex.Message);
    }
  }

   
}