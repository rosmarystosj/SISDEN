@page "/login-entidad"
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@using System.ComponentModel.DataAnnotations
@inject LoginModelService LoginModel


@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<body>
    <!-- login page start-->
    <div class="container-fluid">
        <div class="row m-0">
            <div class="col-12 p-0">
                
                 <div class="login-card login-dark">
                    <div>
                        <div><a class="logo"> <img class="img-fluid" src="../assets/images/landing/logo_transparent_background150.png" @onclick="IraHome" /></a></div>

                        <div class="login-main">
                           
                            <EditForm class="theme-form" Model="LoginModel.LoginModel">
                                <DataAnnotationsValidator />
                                <Validaciones TModel="LoginModel" />
                                <h4>Iniciar sesión como entidad y gestiona tus denuncias</h4>
                                <p>Ingrese su correo electrónico y contraseña para iniciar sesión</p>

                                <div class="form-group">
                                    <label class="col-form-label " for="Usuemail">Correo Electrónico</label>
                                    <InputText id="Usuemail" class="form-control" type="email" required="" placeholder="Prueba@ejemplo.com" @bind-Value="LoginModel.LoginModel.Usuemail" />
                                    <ValidationMessage For="@(() => LoginModel.LoginModel.Usuemail)" class="validation-message" />
                                </div>
                                <div class="form-group">
                                    <label class="col-form-label" for="Usucontraseña">Contraseña</label>
                                    <div class="form-input position-relative">
                                        <InputText id="Usucontraseña" class="form-control" @bind-Value="LoginModel.LoginModel.Usucontraseña" placeholder="*********" type="password" />
                                        <div class="show-hide"><span class="show"></span></div>
                                    </div>
                                    <ValidationMessage For="@(() => LoginModel.LoginModel.Usucontraseña)" class="validation-message" />

                                </div>
                                <div class="form-group mb-0">
                                    <div class="checkbox p-0">
                                        <input id="checkbox1" type="checkbox">
                                        <label class="text-muted" for="checkbox1">Recordar contraseña</label>
                                    </div>
                                    <button class="btn btn-primary btn-block w-100" @onclick="HandleLogin" type="submit">Iniciar sesión</button>
                                    <a class="link" href="/olvidarcontra">¿Olvidaste tu contraseña?</a>

                                </div>
                            </EditForm>
                            <p class="mt-4 mb-0 text-center">¿No tienes una cuenta?<a class="ms-2" href="sign-up.html">Crear cuenta</a></p>
                        </div>
                    </div>
                </div>
            </div>
            </div>
        </div>
 
</body>



@code {
    private string errorMessage;

    private async Task IraHome()
    {
        NavigationManager.NavigateTo("/");
    }

    private async Task HandleLogin()
    {
        try
        {
            errorMessage = null;
            var result = await AuthService.LoginEntidad(LoginModel.LoginModel);
            LoginModel.LoginModel.UsuRol = 2;
        }
        catch (ApplicationException ex)
        {
            errorMessage = ex.Message;
        }
        catch (Exception ex)
        {
            errorMessage = "An unexpected error occurred.";
            Console.WriteLine(ex.Message);
        }
    }
}
