@page "/registro-entidad"
@inject AuthService AuthService
@inject EntidadService EntidadService
@inject NavigationManager NavigationManager
@inject RegistroEntidadService RegistroServiceEntidad
@layout MainLayout


@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="floating-alert">
        @errorMessage
        <span class="floating-alert-close" >&times;</span>
    </div>
}
<body>
    <div class="container-fluid p-0">
        <div class="row m-0">
            <div class="col-12 p-0">
                <div class="login-card login-dark">
                    <div>
                        <div><a class="logo"> <img class="img-fluid" src="../assets/images/landing/logo_transparent_background150.png" @onclick="IraHome" /></a></div>
                        <div class="login-main">
                            <EditForm class="theme-form" Model="RegistroServiceEntidad.EntidadModelo">
                                <DataAnnotationsValidator />
                                <Validaciones TModel="EntidadModel" />

                                <h4>Crea tu cuenta</h4>
                                <p>Ingresa los datos de tu entidad para crear una cuenta</p>
                                    <div class="form-group">

                                    <label class="col-form-label">Nombre de la entidad</label>
                                    <InputSelect class="form-select form-select-sm" aria-label=".form-select-sm example" id="Usuentidad" type="text" @bind-Value="RegistroServiceEntidad.EntidadModelo.Usuentidad">
                                        <option value="">Selecciona tu entidad</option>
                                        @if (entidades != null)
                                        {
                                            @foreach (var entidad in entidades)
                                            {
                                                <option value="@entidad.Identidadaut">@entidad.Entautorizadadescp</option>
                                            }
                                        }
                                    </InputSelect>
                                    <ValidationMessage For="@(() => RegistroServiceEntidad.EntidadModelo.Usuentidad)" />
                                  </div>


                                <div class="form-group">
                                    <label class="col-form-label">Contraseña</label>
                                    <input class="form-control" type="password" name="login[password]" required="" placeholder="*********" @bind="RegistroServiceEntidad.EntidadModelo.Usucontraseña">
                                    <ValidationMessage For="@(() => RegistroServiceEntidad.EntidadModelo.Usucontraseña)" />

                                </div>

                             
                                <div class="form-group">
                                    <label class="col-form-label">Teléfono</label>
                                    <input class="form-control" type="text" required="" placeholder="000-000-0000" @bind="RegistroServiceEntidad.EntidadModelo.Usutelefono">
                                    <ValidationMessage For="@(() => RegistroServiceEntidad.EntidadModelo.Usutelefono)" class="validation-message" />

                                </div>

                                <div class="button-group">
                                    <div class="wizard-footer d-flex gap-2 justify-content-between">
                                    <BotonAtras> </BotonAtras>
                                        <button class="btn btn-primary btn-sm" id="nextbtn" @onclick="HandleRegister">Siguiente</button>
                                    </div> 
                                </div>

                               <p class="mt-4 mb-0">¿Ya tienes una cuenta?<a @onclick="IraLogin" class=" ms-2">Iniciar sesión</a></p>
                            </EditForm>

                        </div>
                    </div>
                </div>
            </div>  
        </div>
       
    </div>
</body>

<style>
    .button-group {
        margin-top: 40px;e4erfn;
</style>

@code {
    private List<EntidadAutorizadaDTO> entidades;

    private string errorMessage;
    private async Task IraHome()
    {
        NavigationManager.NavigateTo("/");
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            entidades = await EntidadService.GetEntidadesAutorizadasAsync();
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred while loading entities.";
            Console.WriteLine(ex.Message);
        }
    }

    private async Task HandleRegister()
    {
        try
        {
            errorMessage = null;
            RegistroServiceEntidad.EntidadModelo.Usurol = 2;
            var email = await AuthService.RegistroEntidad(RegistroServiceEntidad.EntidadModelo);
            RegistroServiceEntidad.EntidadModelo.Usuemail = email;
            NavigationManager.NavigateTo("/verificacion-entidad");
        }
        catch (ApplicationException ex)
        {
            errorMessage = ex.Message;
        }
        catch (Exception ex)
        {
            errorMessage = "Ocurrio un error inesperado.";
            Console.WriteLine(ex.Message);
        }
    }

    private async Task IraLogin()
    {
        NavigationManager.NavigateTo("/login-entidad");
    }
}

